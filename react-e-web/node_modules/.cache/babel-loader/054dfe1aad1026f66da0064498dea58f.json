{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Instagram2\\\\react-e-web\\\\src\\\\Components\\\\CroppedImageUPload\\\\CroppedImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faHeadSideCough, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CroppedImageUpload = () => {\n  _s();\n\n  const [fileName, setFileName] = useState(\"\");\n  const [upImg, setUpImg] = useState(null);\n  const [userData, setUserData] = useState({});\n  const [heading, setheading] = useState(\"\");\n  const History = useHistory();\n  const imgRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [crop, setCrop] = useState({\n    unit: \"px\",\n    width: 500,\n    aspect: 1 / 1\n  });\n  const croppedImage = useRef(null);\n  useEffect(() => {\n    try {\n      async function fetchData() {\n        const res = await axios.get(\"http://localhost:3001/Profile\");\n        setUserData(res.data);\n      }\n\n      fetchData();\n    } catch (err) {\n      History.push(\"/Login\");\n    }\n  }, []);\n\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      setFileName(e.target.files[0].name);\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n      setheading(\"Crop\");\n    }\n  };\n\n  const gotocompose = e => {\n    e.preventDefault();\n    setheading(\"Compose\");\n    return;\n  };\n\n  const goBack = e => {\n    e.preventDefault();\n    if (heading === \"Crop\") window.location.reload();else if (heading === \"Compose\") setheading(\"Crop\");\n  };\n\n  const onLoad = img => {\n    imgRef.current = img;\n  };\n\n  const onCropComplete = crop => {\n    makeClientCrop(crop);\n  };\n\n  const makeClientCrop = async crop => {\n    if (imgRef.current && crop.width && crop.height) {\n      croppedImage.current = await getCroppedImg(imgRef.current, crop, \"newFile.jpeg\");\n    }\n  };\n\n  const getCroppedImg = (image, crop, fileName) => {\n    if (!canvasRef.current || !imgRef.current) {\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext(\"2d\");\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return new Promise((resolve, reject) => {\n      // canvas.toDataURL(\"image/jpeg\");\n      canvas.toBlob(blob => {\n        if (!blob) {\n          //reject(new Error('Canvas is empty'));\n          console.error(\"Canvas is empty\");\n          return;\n        }\n\n        blob.name = fileName;\n        resolve(blob);\n      }, \"image/jpeg\");\n    });\n  };\n\n  const handleSubmit = e => {\n    try {\n      e.preventDefault(); //here get name of image in place of \"name\"\n\n      var file = new File([croppedImage.current], fileName);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      console.log(formData);\n      axios.post(\"http://localhost:3001/selectImage\", formData).then(res => {\n        // then print response status\n        if (res.status !== 500) {\n          // console.log(res.data);\n          // setshowImage(res.data);\n          History.push(\"/Home\");\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [!upImg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          // accept=\"image/*\"\n          id: \"profile-pic\",\n          onChange: onSelectFile // name=\"image\"\n          ,\n          type: \"file\",\n          hidden: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"profile-pic\",\n          children: \"Choose File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), upImg && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boss-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back-button\",\n                onClick: goBack,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faArrowLeft,\n                  size: \"4x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"middle-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-button\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faWindowClose,\n                  size: \"4x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-body\",\n              children: [heading === \"Crop\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(ReactCrop, {\n                  src: upImg,\n                  onImageLoaded: onLoad,\n                  crop: crop,\n                  onChange: c => setCrop(c),\n                  onComplete: onCropComplete\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), heading === \"Compose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cropped-image-container\",\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: canvasRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right-body\",\n              children: [heading === \"Crop\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cropped-image-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                    ref: canvasRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"next-button-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"next-button\",\n                    onClick: gotocompose,\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Next\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this), heading === \"Compose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-area-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"subject\",\n                    name: \"subject\",\n                    placeholder: \"Write a caption\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"next-button-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"next-button\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Share\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 27\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CroppedImageUpload, \"tHI4Q7fN3SbeLcO2N8an3usCvao=\", false, function () {\n  return [useHistory];\n});\n\n_c = CroppedImageUpload;\nexport default CroppedImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"CroppedImageUpload\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Instagram2/react-e-web/src/Components/CroppedImageUPload/CroppedImageUpload.js"],"names":["React","useState","useRef","useEffect","FontAwesomeIcon","faArrowLeft","faHeadSideCough","faWindowClose","useHistory","ReactCrop","axios","CroppedImageUpload","fileName","setFileName","upImg","setUpImg","userData","setUserData","heading","setheading","History","imgRef","canvasRef","crop","setCrop","unit","width","aspect","croppedImage","fetchData","res","get","data","err","push","onSelectFile","e","target","files","length","name","reader","FileReader","addEventListener","result","readAsDataURL","gotocompose","preventDefault","goBack","window","location","reload","onLoad","img","current","onCropComplete","makeClientCrop","height","getCroppedImg","image","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","Promise","resolve","reject","toBlob","blob","console","error","handleSubmit","file","File","formData","FormData","append","log","post","then","status","c"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowLeft,\r\n  faHeadSideCough,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nconst CroppedImageUpload = () => {\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [upImg, setUpImg] = useState(null);\r\n  const [userData, setUserData] = useState({});\r\n  const [heading, setheading] = useState(\"\");\r\n  const History = useHistory();\r\n  const imgRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [crop, setCrop] = useState({ unit: \"px\", width: 500, aspect: 1 / 1 });\r\n  const croppedImage = useRef(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const res = await axios.get(\"http://localhost:3001/Profile\");\r\n        setUserData(res.data);\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      History.push(\"/Login\");\r\n    }\r\n  }, []);\r\n\r\n  const onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      setFileName(e.target.files[0].name);\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => setUpImg(reader.result));\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      setheading(\"Crop\");\r\n    }\r\n  };\r\n\r\n  const gotocompose = (e) => {\r\n    e.preventDefault();\r\n    setheading(\"Compose\");\r\n    return;\r\n  };\r\n\r\n  const goBack = (e) => {\r\n    e.preventDefault();\r\n    if (heading === \"Crop\") window.location.reload();\r\n    else if (heading === \"Compose\") setheading(\"Crop\");\r\n  };\r\n\r\n  const onLoad = (img) => {\r\n    imgRef.current = img;\r\n  };\r\n\r\n  const onCropComplete = (crop) => {\r\n    makeClientCrop(crop);\r\n  };\r\n\r\n  const makeClientCrop = async (crop) => {\r\n    if (imgRef.current && crop.width && crop.height) {\r\n      croppedImage.current = await getCroppedImg(\r\n        imgRef.current,\r\n        crop,\r\n        \"newFile.jpeg\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n    if (!canvasRef.current || !imgRef.current) {\r\n      return;\r\n    }\r\n    const canvas = canvasRef.current;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const pixelRatio = window.devicePixelRatio;\r\n    canvas.width = crop.width * pixelRatio;\r\n    canvas.height = crop.height * pixelRatio;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = \"high\";\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // canvas.toDataURL(\"image/jpeg\");\r\n      canvas.toBlob((blob) => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          console.error(\"Canvas is empty\");\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        resolve(blob);\r\n      }, \"image/jpeg\");\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      //here get name of image in place of \"name\"\r\n      var file = new File([croppedImage.current], fileName);\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      console.log(formData);\r\n      axios.post(\"http://localhost:3001/selectImage\", formData).then((res) => {\r\n        // then print response status\r\n        if (res.status !== 500) {\r\n          // console.log(res.data);\r\n          // setshowImage(res.data);\r\n          History.push(\"/Home\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        {!upImg && (\r\n          <div className=\"input-container\">\r\n            <input\r\n              // accept=\"image/*\"\r\n              id=\"profile-pic\"\r\n              onChange={onSelectFile}\r\n              // name=\"image\"\r\n              type=\"file\"\r\n              hidden=\"hidden\"\r\n            />\r\n            <label for=\"profile-pic\">Choose File</label>\r\n          </div>\r\n        )}\r\n\r\n        {upImg && (\r\n          <div>\r\n            <div className=\"boss-container\">\r\n              <div className=\"top-header\">\r\n                <div className=\"left-button\">\r\n                  <button className=\"back-button\" onClick={goBack}>\r\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"4x\" />\r\n                  </button>\r\n                </div>\r\n                <div className=\"middle-header\">\r\n                  <h1>{heading}</h1>\r\n                </div>\r\n                <div className=\"right-button\">\r\n                  <button className=\"close-button\">\r\n                    <FontAwesomeIcon icon={faWindowClose} size=\"4x\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"body-container\">\r\n                <div className=\"left-body\">\r\n                  {heading === \"Crop\" && (\r\n                    <div>\r\n                      <ReactCrop\r\n                        src={upImg}\r\n                        onImageLoaded={onLoad}\r\n                        crop={crop}\r\n                        onChange={(c) => setCrop(c)}\r\n                        onComplete={onCropComplete}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {heading === \"Compose\" && (\r\n                    <div className=\"cropped-image-container\">\r\n                      <canvas ref={canvasRef} />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"right-body\">\r\n                  {heading === \"Crop\" && (\r\n                    <div>\r\n                      <div className=\"cropped-image-container\">\r\n                        <canvas ref={canvasRef} />\r\n                      </div>\r\n                      <div className=\"next-button-container\">\r\n                        <button className=\"next-button\" onClick={gotocompose}>\r\n                          <h3>Next</h3>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {heading === \"Compose\" && (\r\n                    <div>\r\n                      <div className=\"text-area-container\">\r\n                        <textarea\r\n                          id=\"subject\"\r\n                          name=\"subject\"\r\n                          placeholder=\"Write a caption\"\r\n                        ></textarea>\r\n                      </div>\r\n\r\n                      <div className=\"next-button-container\">\r\n                        <button className=\"next-button\">\r\n                          {\" \"}\r\n                          <h3>Share</h3>{\" \"}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* <div className=\"main-image-container\">\r\n          <div className=\"crop-container\">\r\n            <ReactCrop\r\n              src={upImg}\r\n              onImageLoaded={onLoad}\r\n              crop={crop}\r\n              onChange={(c) => setCrop(c)}\r\n              onComplete={onCropComplete}\r\n            />\r\n          </div>\r\n          <div className=\"cropped-image-container\">\r\n            <canvas ref={canvasRef} />\r\n          </div>\r\n        </div>\r\n        {upImg && (\r\n          <div className=\"upload-button-container\">\r\n            <button className=\"upload-button\" onClick={handleSubmit}>\r\n              Upload\r\n            </button>\r\n          </div>\r\n        )} */}\r\n      </form>\r\n\r\n      {/* heres how to get image back\r\n         <div>\r\n        <h1>{showImage}</h1>\r\n        <img\r\n          src={`http://localhost:3001/inProcessImages/${showImage}`}\r\n          alt=\"getting back\"\r\n        />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CroppedImageUpload;\r\n"]},"metadata":{},"sourceType":"module"}