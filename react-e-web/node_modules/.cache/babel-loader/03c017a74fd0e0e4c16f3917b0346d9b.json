{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Instagram2\\\\react-e-web\\\\src\\\\Components\\\\SignUp\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nconst SignUp = () => {\n  _s();\n\n  const History = useHistory();\n  const [userInfo, setUserInfo] = useState({\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    confPassword: \"\"\n  });\n  const [messages, setMessages] = useState({\n    userNameMessage: \"\",\n    emailMessage: \"\",\n    passwordMessage: \"\",\n    confPasswordMessage: \"\"\n  });\n\n  const isEmailValid = email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n\n  const isPasswordSecure = password => {\n    const re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n    return re.test(password);\n  };\n\n  const isRequired = value => value === \"\" ? false : true;\n\n  const isBetween = (length, min, max) => length >= min && length <= max ? true : false;\n\n  const checkUsername = userName => {\n    const min = 3,\n          max = 25;\n    userName = userName.trim();\n\n    if (!isRequired(userName)) {\n      setMessages(prevState => ({ ...prevState,\n        userNameMessage: \"Username is required\"\n      }));\n      return false;\n    } else if (!isBetween(userName.length, min, max)) {\n      setMessages(prevState => ({ ...prevState,\n        userNameMessage: `Username must be between ${min} and ${max} characters.`\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkEmail = email => {\n    email = email.trim();\n\n    if (!isRequired(email)) {\n      setMessages(prevState => ({ ...prevState,\n        emailMessage: \"Email cannot be blank\"\n      }));\n      return false;\n    } else if (!isEmailValid(email)) {\n      setMessages(prevState => ({ ...prevState,\n        emailMessage: \"Email is not valid.\"\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkPassword = password => {\n    password = password.trim();\n\n    if (!isRequired(password)) {\n      setMessages(prevState => ({ ...prevState,\n        passwordMessage: \"Password cannot be blank.\"\n      }));\n      return false;\n    } else if (!isPasswordSecure(password)) {\n      setMessages(prevState => ({ ...prevState,\n        passwordMessage: \"Password must has at least 8 characters that include at least 1 lowercase character, 1 uppercase characters, 1 number, and 1 special character in (!@#$%^&*)\"\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkConfirmPassword = (password, confPassword) => {\n    confPassword = confPassword.trim();\n    password = password.trim();\n\n    if (!isRequired(confPassword)) {\n      setMessages(prevState => ({ ...prevState,\n        confPasswordMessage: \"Please enter the password again\"\n      }));\n      return false;\n    } else if (password !== confPassword) {\n      setMessages(prevState => ({ ...prevState,\n        confPasswordMessage: \"The password does not match\"\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  const submitData = async event => {\n    let res;\n\n    try {\n      setMessages(() => ({\n        userNameMessage: \"\",\n        emailMessage: \"\",\n        passwordMessage: \"\",\n        confPasswordMessage: \"\"\n      }));\n      event.preventDefault();\n\n      if (checkUsername(userInfo.userName) && checkEmail(userInfo.email) && checkPassword(userInfo.password) && checkConfirmPassword(userInfo.password, userInfo.confPassword)) {\n        res = await axios.post(\"http://localhost:3001/signup\", {\n          userName: userInfo.userName,\n          email: userInfo.email,\n          password: userInfo.password\n        });\n\n        if (res.status === 200) {\n          History.push(\"/Login\");\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInfo(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outerContainer atcenter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Instagram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"userName\",\n              name: \"userName\",\n              value: userInfo.userName,\n              placeholder: \"username\",\n              autoCorrect: \"false\",\n              autoComplete: \"off\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: messages.userNameMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              name: \"email\",\n              value: userInfo.email,\n              placeholder: \"email address\",\n              autoCorrect: \"false\",\n              autoComplete: \"off\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: messages.emailMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: userInfo.password,\n              placeholder: \"Password\",\n              autoCorrect: \"false\",\n              autoComplete: \"off\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: messages.passwordMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confPassword\",\n              name: \"confPassword\",\n              value: userInfo.confPassword,\n              placeholder: \"Confirm Password\",\n              autoCorrect: \"false\",\n              autoComplete: \"off\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: messages.confPasswordMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submitbutton\",\n            onClick: submitData,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"sAy8L+MS1+Gq+6AXMX2DeehnH7Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Instagram2/react-e-web/src/Components/SignUp/SignUp.js"],"names":["React","useState","useHistory","axios","require","SignUp","History","userInfo","setUserInfo","userName","email","password","confPassword","messages","setMessages","userNameMessage","emailMessage","passwordMessage","confPasswordMessage","isEmailValid","re","test","isPasswordSecure","RegExp","isRequired","value","isBetween","length","min","max","checkUsername","trim","prevState","checkEmail","checkPassword","checkConfirmPassword","submitData","event","res","preventDefault","post","status","push","err","console","log","handleChange","e","name","target","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nconst axios = require(\"axios\");\r\n\r\nconst SignUp = () => {\r\n  const History = useHistory();\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    userName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confPassword: \"\",\r\n  });\r\n\r\n  const [messages, setMessages] = useState({\r\n    userNameMessage: \"\",\r\n    emailMessage: \"\",\r\n    passwordMessage: \"\",\r\n    confPasswordMessage: \"\",\r\n  });\r\n\r\n  const isEmailValid = (email) => {\r\n    const re =\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const isPasswordSecure = (password) => {\r\n    const re = new RegExp(\r\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n    );\r\n    return re.test(password);\r\n  };\r\n\r\n  const isRequired = (value) => (value === \"\" ? false : true);\r\n\r\n  const isBetween = (length, min, max) =>\r\n    length >= min && length <= max ? true : false;\r\n\r\n  const checkUsername = (userName) => {\r\n    const min = 3,\r\n      max = 25;\r\n    userName = userName.trim();\r\n\r\n    if (!isRequired(userName)) {\r\n      setMessages((prevState) => ({\r\n        ...prevState,\r\n        userNameMessage: \"Username is required\",\r\n      }));\r\n      return false;\r\n    } else if (!isBetween(userName.length, min, max)) {\r\n      setMessages((prevState) => ({\r\n        ...prevState,\r\n        userNameMessage: `Username must be between ${min} and ${max} characters.`,\r\n      }));\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const checkEmail = (email) => {\r\n    email = email.trim();\r\n    if (!isRequired(email)) {\r\n      setMessages((prevState) => ({\r\n        ...prevState,\r\n        emailMessage: \"Email cannot be blank\",\r\n      }));\r\n      return false;\r\n    } else if (!isEmailValid(email)) {\r\n      setMessages((prevState) => ({\r\n        ...prevState,\r\n        emailMessage: \"Email is not valid.\",\r\n      }));\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const checkPassword = (password) => {\r\n    password = password.trim();\r\n    if (!isRequired(password)) {\r\n      setMessages((prevState) => ({\r\n        ...prevState,\r\n        passwordMessage: \"Password cannot be blank.\",\r\n      }));\r\n      return false;\r\n    } else if (!isPasswordSecure(password)) {\r\n      setMessages((prevState) => ({\r\n        ...prevState,\r\n        passwordMessage:\r\n          \"Password must has at least 8 characters that include at least 1 lowercase character, 1 uppercase characters, 1 number, and 1 special character in (!@#$%^&*)\",\r\n      }));\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const checkConfirmPassword = (password, confPassword) => {\r\n    confPassword = confPassword.trim();\r\n    password = password.trim();\r\n\r\n    if (!isRequired(confPassword)) {\r\n      setMessages((prevState) => ({\r\n        ...prevState,\r\n        confPasswordMessage: \"Please enter the password again\",\r\n      }));\r\n      return false;\r\n    } else if (password !== confPassword) {\r\n      setMessages((prevState) => ({\r\n        ...prevState,\r\n        confPasswordMessage: \"The password does not match\",\r\n      }));\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const submitData = async (event) => {\r\n    let res;\r\n    try {\r\n      setMessages(() => ({\r\n        userNameMessage: \"\",\r\n        emailMessage: \"\",\r\n        passwordMessage: \"\",\r\n        confPasswordMessage: \"\",\r\n      }));\r\n      event.preventDefault();\r\n      if (\r\n        checkUsername(userInfo.userName) &&\r\n        checkEmail(userInfo.email) &&\r\n        checkPassword(userInfo.password) &&\r\n        checkConfirmPassword(userInfo.password, userInfo.confPassword)\r\n      ) {\r\n        res = await axios.post(\"http://localhost:3001/signup\", {\r\n          userName: userInfo.userName,\r\n          email: userInfo.email,\r\n          password: userInfo.password,\r\n        });\r\n        if (res.status === 200) {\r\n          History.push(\"/Login\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserInfo((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"outerContainer atcenter\">\r\n        <div>\r\n          <form method=\"post\">\r\n            <h1 style={{ textAlign: \"center\" }}>Instagram</h1>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"userName\"\r\n                name=\"userName\"\r\n                value={userInfo.userName}\r\n                placeholder=\"username\"\r\n                autoCorrect=\"false\"\r\n                autoComplete=\"off\"\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n              <small>{messages.userNameMessage}</small>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={userInfo.email}\r\n                placeholder=\"email address\"\r\n                autoCorrect=\"false\"\r\n                autoComplete=\"off\"\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n              <small>{messages.emailMessage}</small>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={userInfo.password}\r\n                placeholder=\"Password\"\r\n                autoCorrect=\"false\"\r\n                autoComplete=\"off\"\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n              <small>{messages.passwordMessage}</small>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confPassword\"\r\n                name=\"confPassword\"\r\n                value={userInfo.confPassword}\r\n                placeholder=\"Confirm Password\"\r\n                autoCorrect=\"false\"\r\n                autoComplete=\"off\"\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n              <small>{messages.confPasswordMessage}</small>\r\n            </div>\r\n            <br />\r\n            <button type=\"submit\" className=\"submitbutton\" onClick={submitData}>\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}